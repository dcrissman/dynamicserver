<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		This context file is intended for the Module specific beans and
		configurations.
	-->
	
	<!-- 
		This module was built primarily from the example at:
		https://dynaresume.googlecode.com/svn/tags/BACKUP_BACK_TO_SVN/infrastructure/org.dynaresume.infrastructure.jtatransaction
		
		See the forum post for details:
		http://fogbugz.atomikos.com/default.asp?community.6.1748.13
	-->
	
	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
	init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<!-- IMPORTANT: specify all Atomikos properties here -->
			<props>
				<prop key="com.atomikos.icatch.service">
					com.atomikos.icatch.standalone.UserTransactionServiceFactory
                </prop>
				<prop key="com.atomikos.icatch.force_shutdown_on_vm_exit">true</prop>
                <prop key="com.atomikos.icatch.console_log_level">${jta.log_level}</prop>
                <prop key="com.atomikos.icatch.log_base_dir">${jta.log_base_dir}</prop>
                <prop key="com.atomikos.icatch.output_dir">${jta.output_dir}</prop>
                <prop key="com.atomikos.icatch.tm_unique_name">${jta.tm_unique_name}</prop>
			</props>
		</constructor-arg>
	</bean>


	<bean id="AtomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<!--
			when close is called, should we force transactions to terminate or
			not?
		-->
		<property name="forceShutdown" value="false" />
	</bean>

	<!--
		Also use Atomikos UserTransactionImp, needed to configure Spring
	-->
	<bean id="AtomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="3000" />
	</bean>

	<!--
		Configure the Spring framework to use JTA transactions from Atomikos
	-->
	<bean id="dynamicserverTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="AtomikosTransactionManager" />
		<property name="userTransaction" ref="AtomikosUserTransaction" />
	</bean>

	<bean class="org.apache.xbean.spring.jndi.SpringInitialContextFactory"
		factory-method="makeInitialContext">
		<property name="entries">
			<map>
				<entry key="java:comp/TransactionManager" value-ref="AtomikosTransactionManager" />
				<entry key="java:comp/UserTransaction" value-ref="AtomikosUserTransaction" />
				<entry key="java:comp/UserTransactionService" value-ref="userTransactionService" />
			</map>
		</property>
	</bean>
	
</beans>